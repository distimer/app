/**
 * Generated by orval v7.0.1 🍺
 * Do not edit manually.
 * Distimer Swagger API
 * OpenAPI spec version: 1.0
 */
import {
  faker
} from '@faker-js/faker'
import {
  HttpResponse,
  delay,
  http
} from 'msw'
import type {
  InvitectrlInviteCodeInfoRes,
  InvitectrlInviteGroupRes
} from '../../schemas'

export const getGetInviteGroupIdResponseMock = (): string[] => (Array.from({length: faker.number.int({min: 1,max: 10})}, () => faker.word.sample()))

export const getPostInviteGroupIdResponseMock = (overrideResponse: Partial< InvitectrlInviteGroupRes > = {}): InvitectrlInviteGroupRes => ({code: faker.word.sample(), ...overrideResponse})

export const getGetInviteCodeResponseMock = (overrideResponse: Partial< InvitectrlInviteCodeInfoRes > = {}): InvitectrlInviteCodeInfoRes => ({group_description: faker.word.sample(), group_name: faker.word.sample(), group_owner_nickname: faker.word.sample(), ...overrideResponse})


export const getGetInviteGroupIdMockHandler = (overrideResponse?: string[] | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<string[]> | string[])) => {
  return http.get('*/invite/group/:id', async (info) => {await delay(1000);
  
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined 
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse) 
            : getGetInviteGroupIdResponseMock()),
      { status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}

export const getPostInviteGroupIdMockHandler = (overrideResponse?: InvitectrlInviteGroupRes | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<InvitectrlInviteGroupRes> | InvitectrlInviteGroupRes)) => {
  return http.post('*/invite/group/:id', async (info) => {await delay(1000);
  
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined 
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse) 
            : getPostInviteGroupIdResponseMock()),
      { status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}

export const getDeleteInviteGroupIdCodeMockHandler = (overrideResponse?: void | ((info: Parameters<Parameters<typeof http.delete>[1]>[0]) => Promise<void> | void)) => {
  return http.delete('*/invite/group/:id/:code', async (info) => {await delay(1000);
  if (typeof overrideResponse === 'function') {await overrideResponse(info); }
    return new HttpResponse(null,
      { status: 204,
        
      })
  })
}

export const getGetInviteCodeMockHandler = (overrideResponse?: InvitectrlInviteCodeInfoRes | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<InvitectrlInviteCodeInfoRes> | InvitectrlInviteCodeInfoRes)) => {
  return http.get('*/invite/:code', async (info) => {await delay(1000);
  
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined 
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse) 
            : getGetInviteCodeResponseMock()),
      { status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}
export const getInviteMock = () => [
  getGetInviteGroupIdMockHandler(),
  getPostInviteGroupIdMockHandler(),
  getDeleteInviteGroupIdCodeMockHandler(),
  getGetInviteCodeMockHandler()
]
